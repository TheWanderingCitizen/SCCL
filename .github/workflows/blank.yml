name: Convert INI to JSON and Compare with Final

on:
  push:
    branches:
      - main

jobs:
  convert-compare-json:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y jq curl

    - name: Convert INI to JSON
      run: |
        # Convert INI to JSON format
        cat global.ini | grep '=' | while IFS= read -r line; do
          key=$(echo "$line" | cut -d '=' -f 1 | xargs)
          original=$(echo "$line" | cut -d '=' -f 2- | xargs)
          echo "{\"key\": \"$key\", \"original\": \"$original\", \"translation\": \"\", \"context\": \"\"}," >> temp.json
        done

        # Wrap the JSON objects in an array
        echo "[" > global.json
        cat temp.json >> global.json
        sed -i '$ s/,$//' global.json # Remove trailing comma
        echo "]" >> global.json
        rm temp.json

    - name: Fetch and merge JSON data
      run: |
        # Fetch JSON data from API
        curl -s -H "Authorization: 5c672e8056d802c52d3398e1376174f0" \
             -H "Cookie: sid=s%3A5c672e8056d802c52d3398e1376174f0.Nvn4B0oVX%2BeUAIP7cSqwkqp7%2BIr8DwL1AhXhpRKs7r8" \
             "https://paratranz.cn/api/projects/8340/files" > files.json

        # Initialize empty array for merging
        echo '[]' > merged_data.json

        # Loop through each file ID and merge JSON data
        jq -c '.[] | .id' files.json | while read -r file_id; do
          curl -s -H "Authorization: 5c672e8056d802c52d3398e1376174f0" \
               -H "Cookie: sid=s%3A5c672e8056d802c52d3398e1376174f0.Nvn4B0oVX%2BeUAIP7cSqwkqp7%2BIr8DwL1AhXhpRKs7r8" \
               "https://paratranz.cn/api/projects/8340/files/${file_id}/translation" > temp.json
          
          # Merge into the merged_data.json file
          jq -s '.[0] + .[1]' merged_data.json temp.json > temp_merged.json
          mv temp_merged.json merged_data.json
        done

        mv merged_data.json final.json

    - name: Compare global JSON with final JSON
      run: |
        # Compare global.json with final.json, keeping final.json's original text in case of differences
        jq --argfile final final.json --argfile global global.json \
          '[.[] as $g | $final[] | select(.key == $g.key and .original != $g.original)]' > difference.json

    - name: Upload final JSON and Differences
      uses: actions/upload-artifact@v3
      with:
        name: json-files
        path: |
          final.json
          difference.json
